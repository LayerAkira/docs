openapi: 3.0.2
info:
  title: Layer Akira API
  description: API documentation for Layer Akira
  version: 1.0.0

servers:
  - url: https://api.layerakira.xyz

paths:
  /sign/request_sign_data:
    get:
      summary: Get Sign Data
      description: Retrieves data that the client needs to sign via the private key of the signer to show that they are the real owner of the account.
      parameters:
        - in: query
          name: user
          required: true
          schema:
            type: string
            example: "0x03e56dd52f96df3bc130f7a0b241dfed26b4a280d28a199e1e857f6d8acbb666"
          description: The public key responsible for signing actions on behalf of the account.
        - in: query
          name: account
          required: true
          schema:
            type: string
            example: "0x033e29bc9B537BAe4e370559331E2bf35b434b566f41a64601b37f410f46a580"
          description: The trading account.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultSignData'
              examples:
                SignDataIssued:
                  value:
                    result: "challenge sign data"
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              examples:
                WrongUser:
                  value:
                    code: 400
                    error: "Wrong user"
                WrongAccount:
                  value:
                    code: 400
                    error: "Wrong account"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              examples:
                Unauthorized:
                  value:
                    code: 401
                    error: "User account not whitelisted"
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              examples:
                RateLimitExceeded:
                  value:
                    code: 429
                    error: "Rate limit exceeded. Suggested sleep time: 1000ms"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              examples:
                ServerError:
                  value:
                    code: 500
                    error: "Internal server error"

  /sign/auth:
    post:
      summary: Issue JWT
      description: User would need to sign challenge received via request_sign_data that would be inserted into typed message. Refer to documentation chapter about auth.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                msg:
                  type: string
                  description: The SignData from the getSignData endpoint.
                  example: "Some sign data"
                signature:
                  items:
                    type: string
                  description: The stringified signature of the typed message wrt to snip revision 0.
                  example: "['0x1234abcd'....'0x1234...',... '0x123..']"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultAuth'
              examples:
                JwtTokenIssued:
                  value:
                    result: "JWT token"
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              examples:
                InvalidInput:
                  value:
                    code: 400
                    error: "Invalid msg or signature parameter"
                MessageExpired:
                  value:
                    code: 400
                    error: "Message expired"
                IssueWithChain:
                  value:
                    code: 400
                    error: "Invalid onchain signature for 0x..."
                InvalidSignature:
                  value:
                    code: 400
                    error: "Invalid signature"
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              examples:
                RateLimitExceeded:
                  value:
                    code: 429
                    error: "Rate limit exceeded. Suggested sleep time: 1000ms"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              examples:
                ServerError:
                  value:
                    code: 500
                    error: "Internal server error"
                IssueWithChain:
                  value:
                    code: 500
                    error: "Issue with chain"
                FailedToParse:
                  value:
                    code: 500
                    error: "Failed to parse request"

components:
  securitySchemes:
    AuthToken:
      type: apiKey
      in: header
      name: Authorization  # name of the header, query parameter or cookie
  schemas:
    Result:
      type: object
      properties:
        result:
          oneOf:
            - type: string
            - type: object
            - type: array
              items:
                type: object
          required: false
        code:
          type: integer
          required: false
        error:
          type: string
          required: false
    ResultSignData:
      type: object
      properties:
        result:
          type: string
          required: true
          example: "sign data challenge"
    ResultAuth:
      type: object
      properties:
        result:
          type: string
          required: true
          example: "<jwt token>"
  examples:
    SignDataIssued:
      value:
        result: "Sign data issued successfully."
    InvalidInput:
      value:
        code: 400
        error: "Invalid user or account parameter"
    Unauthorized:
      value:
        code: 401
        error: "Unauthorized access"
    RateLimitExceeded:
      value:
        code: 429
        error: "Rate limit exceeded. Suggested sleep time: 1000ms"
    WrongUser:
      value:
        code: 500
        error: "Wrong user"
    WrongAccount:
      value:
        code: 500
        error: "Wrong account"
    ServerError:
      value:
        code: 500
        error: "Internal server error"
    JwtTokenIssued:
      value:
        result: "JWT token issued successfully."
#security:
#  - AuthToken: []